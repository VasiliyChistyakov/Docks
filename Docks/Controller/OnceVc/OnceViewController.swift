//
//  OnceViewController.swift
//  Docks
//
//  Created by –í–∞—Å–∏–ª–∏–π  on 14.02.2022.
//

import UIKit

class OnceViewController: UIViewController {
    
    var nameLable: String?
    let dateFormater = DateFormatter()
    var openDate: String!
    var exitDate: String!
    
    @IBOutlet weak var oneDate: UILabel!
    @IBOutlet weak var onceNameLabel: UILabel!
    @IBOutlet weak var twoDate: UILabel!
    @IBOutlet weak var datePicker: UIDatePicker!
    @IBOutlet weak var oneButtonLabel: UIButton!
    @IBOutlet weak var twoButtonLabel: UIButton!
    @IBOutlet weak var tapButtonLabel: UIButton!
    
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        dateFormater.dateFormat = "dd MMM,yyyy"
        
        self.onceNameLabel.text = nameLable
        
    }
    
    
    @IBAction func dateTapAction(_ sender: UIButton) {
        let open = "\(dateFormater.string(from: datePicker.date))"
        if !open.isEmpty {
            openDate = open
            oneDate.text = "—Å \(open)" }
    }
    
    @IBAction func twoDateTapAction(_ sender: UIButton) {
        let exit = "\(dateFormater.string(from: datePicker.date))"
        if !exit.isEmpty {
            exitDate = exit
            twoDate.text = "—Å \(exit)"
        }
    }
    
    @IBAction func openList(_ sender: UIButton) {
        guard let openDateList = openDate, let exitDateList = exitDate else { return errorFetchAllert()}
        let date = "c \(openDateList) –ø–æ \(exitDateList) "
        fetchAllert(date: date)
    }
    
    func fetchAllert(date: String) {
        if nameLable == "–°–æ–æ–±—â–∏—Ç—å –æ –±–æ–ª–µ–∑–Ω–∏" {
            let ac = UIAlertController(title: "–°–∫–æ—Ä–µ–π—à–µ–≥–æ –≤—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—è üë©‚Äç‚öïÔ∏è" , message: "–ë–õ –æ—Ç–∫—Ä—ã—Ç \(date)" , preferredStyle: .alert)
            let ok = UIAlertAction(title: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ë–õ", style: .default) { _ in
                self.navigationController?.popToRootViewController(animated: true)
            }
            let change = UIAlertAction(title: "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É", style: .default) { _ in }
            
            ac.addAction(ok)
            ac.addAction(change)
            
            present(ac, animated: true, completion: nil)
        } else {
            let ac = UIAlertController(title: "–û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –¥–æ–º–∞ üè†" , message: "–£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ \(date)" , preferredStyle: .alert)
            let ok = UIAlertAction(title: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ", style: .default) { _ in
                self.navigationController?.popToRootViewController(animated: true)
            }
            let change = UIAlertAction(title: "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É", style: .default) { _ in }
            
            ac.addAction(ok)
            ac.addAction(change)
            
            present(ac, animated: true, completion: nil)
            
        }
    }
    
    func errorFetchAllert() {
        let ac = UIAlertController(title: "–ó–∞–ø–æ–ª–Ω–µ–Ω—ã –Ω–µ –≤—Å–µ –ø–æ–ª—è ü§¶‚Äç‚ôÄÔ∏è", message: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π, –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑", preferredStyle: .alert)
        let ok = UIAlertAction(title: "Ok", style: .default) { _ in }
        
        ac.addAction(ok)
        
        present(ac, animated: true, completion: nil)
    }
    
}


